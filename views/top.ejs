<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>portfolio</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <link rel="stylesheet" href="top.css">
  <script src="https://code.jquery.com/jquery-3.4.1.min.js"
    integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous" defer></script>
  <script src="top.js" defer></script>
</head>

<body>
  <div id="title">
    <h1>Yuta Hirayama Portfolio Top</h1>
  </div>
  <div id="info">
    <p>平山勇太のポートフォリオサイトをご覧いただきありがとうございます。</p>
    <p>こちらのページに順次作品を追加していきます。</p>
    <p>このサーバはGitHub Actionsを利用したCDによって構築されています。</p>
    <p>GitHub上のソースコードに修正があると自動的にページは更新されます。</p>
  </div>
  <ul class="acordion-area">
    <li>
      <section>
        <h2 class="title">GitHub</h2>
        <div class="box">
          <p>普段はGitLabを利用しており，研究室との約束の関係で公開できる情報が少ないですがお許しください。</p>
          <a href="https://github.com/utsxer">GitHub</a>
        </div>
      </section>
    </li>
    <li>
      <section>
        <h2 class="title">面談予約サイト(集団開発)</h2>
        <div class="box">
          <ul class="acorion-area">
            <li>
              <section>
                <h3 class="title">説明</h3>
                <div class="box">
                  <p>オープンラボ用に四名で集団開発を行った面談予約専用ウェブサイトです。</p>
                  <p>2022年度のオープンラボでは100名程度の同時利用に耐え抜きました。</p>
                  <p>会員登録（メールアドレス登録＝＞メールで認証コードが届く＝＞ウェブサイト上で入力して登録）＝＞面談予約の流れで利用します。</p>
                  <p>学内利用の場合は（eexxxxxx@meiji.ac.jp）のメールアドレスを利用しますが，今回はポートフォリオ用にバリデーションを解除してあります。</p>
                  <p>こちらはソースコードは公開しない約束でポートフォリオに掲載しておりますので,ソースコードはお見せできません。ご了承ください。</p>
                </div>
              </section>
            </li>
            <li>
              <section>
                <h3 class="title">開発技術セット</h3>
                <div class="box">
                  <p>利用技術</p>
                  <table>
                    <tr>
                      <td>設計モデル</td>
                      <td>MVCモデル</td>
                    </tr>
                    <tr>
                      <td>API設計</td>
                      <td>REST</td>
                    </tr>
                    <tr>
                      <td>フレームワーク</td>
                      <td>NestJS</td>
                    </tr>
                    <tr>
                      <td>開発言語</td>
                      <td>TypeScript</td>
                    </tr>
                    <tr>
                      <td>データベース</td>
                      <td>MariaDB</td>
                    </tr>
                    <tr>
                      <td>ORマッパー</td>
                      <td>TypeORM</td>
                    </tr>
                    <tr>
                      <td>テンプレートエンジン</td>
                      <td>Nunjucks</td>
                    </tr>
                  </table>
                </div>
              </section>
            </li>
            <li>
              <section>
                <h3 class="title">担当箇所</h3>
                <div class="box">
                  主に，認証機能作成・API作成・データベース設計・ORマッパー関連について担当しました。
                  <h4>認証機能実装</h4>
                  <p>ログイン機能とjwtによるセッションを実装。利用期間（1週間程度）から考えてセッションにはjwtをCookieに保存する方式をとっている。</p>
                  <p>ログインをするとjwtトークンをCookieに乗せるというような処理を行います。</p>
                  <p>エンドポイントごとにトークンを検査し，ログイン情報等を調査します。</p>
                  <p>終わったあとに勉強して気づいたが，セッション管理もデータベースにトークンを置く形で実装すれば良かったかなあという反省があります。</p>
                  <h4>API作成</h4>
                  <p>RESTエンドポイントをいくつか（約20のうち半分以上）作成した。</p>
                  <p>RESTなAPI設計は，NestJSがフレームワークとしてよくできていて助けられたと感じました。<br>
                    一個前のプロトの際はAPI設計に関する知識がまるでなかったため，ぐちゃぐちゃな設計になってしまいましたが，<br>
                  今回はあらためてAPI設計について勉強し，なるべくRESTになるように開発を行いました。<br>
                  設計がしっかりしていたのと，フレームワークがREST向きだったおかげでスムーズに開発を行うことができました。</p>
                  <p>細かいポイントを言えば，例えばPOSTされる値のバリデーションなどは気を使って実装を行いました。</p>
                  <h4>データベース設計・ORマッパー関連の実装</h4>
                  <p>一個前のプロトタイプの作成時は正規化に関する知識がまるでないのに加え，デッドロックが起こりそうな成果物だという評価を受けたので，<br>
                  今回は第３正規化までおこないデッドロックになるべく気をつけながら実装をおこなった。<br>
                  セッション管理にデータベースではなくjwtを採用したのはデータベースアクセスを増やしすぎたくなかったためだが，そもそもデッドロックがなにかをしっかりわかっていればデータベースを利用したトークン管理でも良かったかもなという反省があります。</p>
                　<p>データベースにアクセスする関数の作成も主に私が担当しました。なるべくデータベースに勝手に触れられないようにカプセル化して提供しております。</p>
                </div>
              </section>
            </li>
            <li>
              <section>
                <h3 class="title">サイトURL</h3>
                <div class="box">
                  <a href="https://reservation.utahrym.dev">面談予約サイト</a>
                <p>サインアップ＝＞サインインと進んでこちらを入力してください。<br>id:guest<br>pass:password2023<br><br>※通常の流れで任意のメールアドレスを登録いただくことも可能です。</p>
                </div>
              </section>
            </li>
          </ul>
        </div>
      </section>
    </li>


    <li>
      <section>
        <h2 class="title">自作AltJS</h2>
        <div class="box">
          <ul class="acordion-area">
            <li>
              <section>
                <h3 class="title">説明</h3>
                <div class="box">
                  <p>ソフトウェア工学の特性上研究で言語処理系や構文解析を利用することが多いため，構文解析の概要を掴むために作成しました。</p>
                  <p>作成したソフトウェアを利用すれば<a
                      href="https://web.archive.org/web/20150618184706/http://compsoc.dur.ac.uk/whitespace/tutorial.php">WhiteSpace</a>という言語をJavaScriptにトランスパイルすることが可能です。
                  </p>
                  <p>内部で生成されるコードの計算モデルはスタックマシンで，JavaScriptの配列をうまく使うことで再現しています。</p>
                </div>
              </section>
            </li>
            <li>
              <section>
                <h3 class="title">開発技術セット</h3>
                <div class="box">
                  <table>
                    <tr>
                      <td>使用言語</td>
                      <td>TypeScript</td>
                    </tr>
                    <tr>
                      <td>パーサジェネレータ</td>
                      <td>PegJS</td>
                    </tr>
                  </table>
                </div>
              </section>
            </li>
            <li>
              <section>
                <h3 class="title">工夫点</h3>
                <div class="box">
                  <h4>TypeScript</h4>
                  将来的にWebページ上で動作するコンパイラとしてサービス提供をしたいのでTypeScript(JavaScript)で作成しました。
                  現在はNodeJSを動作環境としていますが，今後ブラウザ上で動くように修正予定です。
                   <h4>スタックマシンの再現</h4>
                   <p>トランスパイラによって生成されるコードはスタックマシンの計算モデルとなっています。
                   関数配列をメモリに見立ててポインタの役割をする変数でメモリ（配列）を端からたどります。</p><br>
                   <a href="https://github.com/utsxer/white-spaceJS/blob/main/src/ws_js_translator/sample_output/helloWorld.js">生成されるコードのサンプル（HelloWorld）</a>
                </div>

              </section>
            </li>
            <li>
              <section>
                <h3 class="title">サイトURL</h3>
                <div class="box">
                   <a href="https://github.com/utsxer/white-spaceJS">GitHub</a><br>
                  <a href="https://whitespace.utahrym.dev">実際に動かせる場所（準備中）</a>
                </div>

              </section>
            </li>
          </ul>
        </div>
      </section>
    </li>
  </ul>
</body>

</html>